"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./services/gasFeeService.js":
/*!***********************************!*\
  !*** ./services/gasFeeService.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nclass GasFeeService {\n    // Log gas fee data\n    static async logGasFee(param) {\n        let { campaignId , donatorAddress , donationAmount , gasFee , maxFee , gasPrice , gasLimit , contractVersion , isSuccess  } = param;\n        try {\n            const response = await fetch(\"/api/gas-fee\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    campaignId,\n                    donatorAddress,\n                    donationAmount,\n                    gasFee,\n                    maxFee,\n                    gasPrice,\n                    gasLimit,\n                    contractVersion,\n                    isSuccess\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to log gas fee\");\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error logging gas fee:\", error);\n            throw error;\n        }\n    }\n    // Get gas fee data for a specific campaign\n    static async getCampaignGasFees(campaignId) {\n        try {\n            const response = await fetch(\"/api/gas-fee?campaignId=\".concat(campaignId));\n            if (!response.ok) {\n                throw new Error(\"Failed to get campaign gas fees\");\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error getting campaign gas fees:\", error);\n            throw error;\n        }\n    }\n    // Get total gas fee for a campaign\n    static async getTotalGasFeeForCampaign(campaignId) {\n        try {\n            const query = \"\\n                SELECT SUM(gas_fee) as total_gas_fee\\n                FROM gas_fee_logs\\n                WHERE campaign_id = $1;\\n            \";\n            const result = await pool.query(query, [\n                campaignId\n            ]);\n            return result.rows[0].total_gas_fee || 0;\n        } catch (error) {\n            console.error(\"Error getting total gas fee:\", error);\n            throw error;\n        }\n    }\n    // Get gas fee statistics with filters\n    static async getGasFeeStats() {\n        let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        try {\n            const queryParams = new URLSearchParams();\n            if (filters.campaignId) queryParams.append(\"campaignId\", filters.campaignId);\n            if (filters.timeRange) queryParams.append(\"timeRange\", filters.timeRange);\n            if (filters.contractVersion) queryParams.append(\"contractVersion\", filters.contractVersion);\n            const response = await fetch(\"/api/gas-fee?\".concat(queryParams.toString()));\n            if (!response.ok) {\n                throw new Error(\"Failed to get gas fee stats\");\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error getting gas fee stats:\", error);\n            throw error;\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (GasFeeService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZXJ2aWNlcy9nYXNGZWVTZXJ2aWNlLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQTtJQUNGLG1CQUFtQjtJQUNuQixhQUFhQyxVQUFVLEtBVXRCLEVBQUU7WUFWb0IsRUFDbkJDLFdBQVUsRUFDVkMsZUFBYyxFQUNkQyxlQUFjLEVBQ2RDLE9BQU0sRUFDTkMsT0FBTSxFQUNOQyxTQUFRLEVBQ1JDLFNBQVEsRUFDUkMsZ0JBQWUsRUFDZkMsVUFBUyxFQUNaLEdBVnNCO1FBV25CLElBQUk7WUFDQSxNQUFNQyxXQUFXLE1BQU1DLE1BQU0sZ0JBQWdCO2dCQUN6Q0MsUUFBUTtnQkFDUkMsU0FBUztvQkFDTCxnQkFBZ0I7Z0JBQ3BCO2dCQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7b0JBQ2pCZjtvQkFDQUM7b0JBQ0FDO29CQUNBQztvQkFDQUM7b0JBQ0FDO29CQUNBQztvQkFDQUM7b0JBQ0FDO2dCQUNKO1lBQ0o7WUFFQSxJQUFJLENBQUNDLFNBQVNPLEVBQUUsRUFBRTtnQkFDZCxNQUFNLElBQUlDLE1BQU0seUJBQXlCO1lBQzdDLENBQUM7WUFFRCxPQUFPLE1BQU1SLFNBQVNTLElBQUk7UUFDOUIsRUFBRSxPQUFPQyxPQUFPO1lBQ1pDLFFBQVFELEtBQUssQ0FBQywwQkFBMEJBO1lBQ3hDLE1BQU1BLE1BQU07UUFDaEI7SUFDSjtJQUVBLDJDQUEyQztJQUMzQyxhQUFhRSxtQkFBbUJyQixVQUFVLEVBQUU7UUFDeEMsSUFBSTtZQUNBLE1BQU1TLFdBQVcsTUFBTUMsTUFBTSwyQkFBc0MsT0FBWFY7WUFDeEQsSUFBSSxDQUFDUyxTQUFTTyxFQUFFLEVBQUU7Z0JBQ2QsTUFBTSxJQUFJQyxNQUFNLG1DQUFtQztZQUN2RCxDQUFDO1lBQ0QsT0FBTyxNQUFNUixTQUFTUyxJQUFJO1FBQzlCLEVBQUUsT0FBT0MsT0FBTztZQUNaQyxRQUFRRCxLQUFLLENBQUMsb0NBQW9DQTtZQUNsRCxNQUFNQSxNQUFNO1FBQ2hCO0lBQ0o7SUFFQSxtQ0FBbUM7SUFDbkMsYUFBYUcsMEJBQTBCdEIsVUFBVSxFQUFFO1FBQy9DLElBQUk7WUFDQSxNQUFNdUIsUUFBUztZQUtmLE1BQU1DLFNBQVMsTUFBTUMsS0FBS0YsS0FBSyxDQUFDQSxPQUFPO2dCQUFDdkI7YUFBVztZQUNuRCxPQUFPd0IsT0FBT0UsSUFBSSxDQUFDLEVBQUUsQ0FBQ0MsYUFBYSxJQUFJO1FBQzNDLEVBQUUsT0FBT1IsT0FBTztZQUNaQyxRQUFRRCxLQUFLLENBQUMsZ0NBQWdDQTtZQUM5QyxNQUFNQSxNQUFNO1FBQ2hCO0lBQ0o7SUFFQSxzQ0FBc0M7SUFDdEMsYUFBYVMsaUJBQTZCO1lBQWRDLFVBQUFBLGlFQUFVLENBQUMsQ0FBQztRQUNwQyxJQUFJO1lBQ0EsTUFBTUMsY0FBYyxJQUFJQztZQUN4QixJQUFJRixRQUFRN0IsVUFBVSxFQUFFOEIsWUFBWUUsTUFBTSxDQUFDLGNBQWNILFFBQVE3QixVQUFVO1lBQzNFLElBQUk2QixRQUFRSSxTQUFTLEVBQUVILFlBQVlFLE1BQU0sQ0FBQyxhQUFhSCxRQUFRSSxTQUFTO1lBQ3hFLElBQUlKLFFBQVF0QixlQUFlLEVBQUV1QixZQUFZRSxNQUFNLENBQUMsbUJBQW1CSCxRQUFRdEIsZUFBZTtZQUUxRixNQUFNRSxXQUFXLE1BQU1DLE1BQU0sZ0JBQXVDLE9BQXZCb0IsWUFBWUksUUFBUTtZQUNqRSxJQUFJLENBQUN6QixTQUFTTyxFQUFFLEVBQUU7Z0JBQ2QsTUFBTSxJQUFJQyxNQUFNLCtCQUErQjtZQUNuRCxDQUFDO1lBQ0QsT0FBTyxNQUFNUixTQUFTUyxJQUFJO1FBQzlCLEVBQUUsT0FBT0MsT0FBTztZQUNaQyxRQUFRRCxLQUFLLENBQUMsZ0NBQWdDQTtZQUM5QyxNQUFNQSxNQUFNO1FBQ2hCO0lBQ0o7QUFDSjtBQUVBLCtEQUFlckIsYUFBYUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zZXJ2aWNlcy9nYXNGZWVTZXJ2aWNlLmpzPzMwYzEiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgR2FzRmVlU2VydmljZSB7XG4gICAgLy8gTG9nIGdhcyBmZWUgZGF0YVxuICAgIHN0YXRpYyBhc3luYyBsb2dHYXNGZWUoe1xuICAgICAgICBjYW1wYWlnbklkLFxuICAgICAgICBkb25hdG9yQWRkcmVzcyxcbiAgICAgICAgZG9uYXRpb25BbW91bnQsXG4gICAgICAgIGdhc0ZlZSxcbiAgICAgICAgbWF4RmVlLFxuICAgICAgICBnYXNQcmljZSxcbiAgICAgICAgZ2FzTGltaXQsXG4gICAgICAgIGNvbnRyYWN0VmVyc2lvbixcbiAgICAgICAgaXNTdWNjZXNzXG4gICAgfSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9nYXMtZmVlJywge1xuICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICAgICAgY2FtcGFpZ25JZCxcbiAgICAgICAgICAgICAgICAgICAgZG9uYXRvckFkZHJlc3MsXG4gICAgICAgICAgICAgICAgICAgIGRvbmF0aW9uQW1vdW50LFxuICAgICAgICAgICAgICAgICAgICBnYXNGZWUsXG4gICAgICAgICAgICAgICAgICAgIG1heEZlZSxcbiAgICAgICAgICAgICAgICAgICAgZ2FzUHJpY2UsXG4gICAgICAgICAgICAgICAgICAgIGdhc0xpbWl0LFxuICAgICAgICAgICAgICAgICAgICBjb250cmFjdFZlcnNpb24sXG4gICAgICAgICAgICAgICAgICAgIGlzU3VjY2Vzc1xuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBsb2cgZ2FzIGZlZScpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9nZ2luZyBnYXMgZmVlOicsIGVycm9yKTtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gR2V0IGdhcyBmZWUgZGF0YSBmb3IgYSBzcGVjaWZpYyBjYW1wYWlnblxuICAgIHN0YXRpYyBhc3luYyBnZXRDYW1wYWlnbkdhc0ZlZXMoY2FtcGFpZ25JZCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9nYXMtZmVlP2NhbXBhaWduSWQ9JHtjYW1wYWlnbklkfWApO1xuICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGdldCBjYW1wYWlnbiBnYXMgZmVlcycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGdldHRpbmcgY2FtcGFpZ24gZ2FzIGZlZXM6JywgZXJyb3IpO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBHZXQgdG90YWwgZ2FzIGZlZSBmb3IgYSBjYW1wYWlnblxuICAgIHN0YXRpYyBhc3luYyBnZXRUb3RhbEdhc0ZlZUZvckNhbXBhaWduKGNhbXBhaWduSWQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0gYFxuICAgICAgICAgICAgICAgIFNFTEVDVCBTVU0oZ2FzX2ZlZSkgYXMgdG90YWxfZ2FzX2ZlZVxuICAgICAgICAgICAgICAgIEZST00gZ2FzX2ZlZV9sb2dzXG4gICAgICAgICAgICAgICAgV0hFUkUgY2FtcGFpZ25faWQgPSAkMTtcbiAgICAgICAgICAgIGA7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwb29sLnF1ZXJ5KHF1ZXJ5LCBbY2FtcGFpZ25JZF0pO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5yb3dzWzBdLnRvdGFsX2dhc19mZWUgfHwgMDtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGdldHRpbmcgdG90YWwgZ2FzIGZlZTonLCBlcnJvcik7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIEdldCBnYXMgZmVlIHN0YXRpc3RpY3Mgd2l0aCBmaWx0ZXJzXG4gICAgc3RhdGljIGFzeW5jIGdldEdhc0ZlZVN0YXRzKGZpbHRlcnMgPSB7fSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcXVlcnlQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7XG4gICAgICAgICAgICBpZiAoZmlsdGVycy5jYW1wYWlnbklkKSBxdWVyeVBhcmFtcy5hcHBlbmQoJ2NhbXBhaWduSWQnLCBmaWx0ZXJzLmNhbXBhaWduSWQpO1xuICAgICAgICAgICAgaWYgKGZpbHRlcnMudGltZVJhbmdlKSBxdWVyeVBhcmFtcy5hcHBlbmQoJ3RpbWVSYW5nZScsIGZpbHRlcnMudGltZVJhbmdlKTtcbiAgICAgICAgICAgIGlmIChmaWx0ZXJzLmNvbnRyYWN0VmVyc2lvbikgcXVlcnlQYXJhbXMuYXBwZW5kKCdjb250cmFjdFZlcnNpb24nLCBmaWx0ZXJzLmNvbnRyYWN0VmVyc2lvbik7XG5cbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvZ2FzLWZlZT8ke3F1ZXJ5UGFyYW1zLnRvU3RyaW5nKCl9YCk7XG4gICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZ2V0IGdhcyBmZWUgc3RhdHMnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZXR0aW5nIGdhcyBmZWUgc3RhdHM6JywgZXJyb3IpO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEdhc0ZlZVNlcnZpY2U7ICJdLCJuYW1lcyI6WyJHYXNGZWVTZXJ2aWNlIiwibG9nR2FzRmVlIiwiY2FtcGFpZ25JZCIsImRvbmF0b3JBZGRyZXNzIiwiZG9uYXRpb25BbW91bnQiLCJnYXNGZWUiLCJtYXhGZWUiLCJnYXNQcmljZSIsImdhc0xpbWl0IiwiY29udHJhY3RWZXJzaW9uIiwiaXNTdWNjZXNzIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwiRXJyb3IiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwiZ2V0Q2FtcGFpZ25HYXNGZWVzIiwiZ2V0VG90YWxHYXNGZWVGb3JDYW1wYWlnbiIsInF1ZXJ5IiwicmVzdWx0IiwicG9vbCIsInJvd3MiLCJ0b3RhbF9nYXNfZmVlIiwiZ2V0R2FzRmVlU3RhdHMiLCJmaWx0ZXJzIiwicXVlcnlQYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJhcHBlbmQiLCJ0aW1lUmFuZ2UiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./services/gasFeeService.js\n"));

/***/ })

});